val lista = ["a","h", "am", "me","i","o","u"];

val words = ["haha", "aaaa", "klaada", "amai", "oea", "iiumea"];

val tokens = fn x => List.map Char.toString (String.explode x)

val words = List.map tokens words;

fun compareFrag(_,[]) = false
  | compareFrag(tok,h::t) =
  	if tok = h
  		then true
  		else compareFrag(tok,t)
  		
fun parseS (tokens,n) = compareFrag(List.nth(tokens,n),lista)			            
			       
fun parseDF (tokens,n,t) = if t = 2 
				then false
				else compareFrag(List.nth(tokens,n)^List.nth(tokens,n+1),lista)

fun parseDB (tokens,n,t) = if t = 2 
				then false
				else compareFrag(List.nth(tokens,n-1)^List.nth(tokens,n),lista)			            

fun verify (pal,n,t) = if n = List.length(pal) 
			then pal
			else if parseS(pal,n)
				then verify (pal,n+1,1)
				else if parseDF(pal,n,t)
					then verify( pal,n+2,2)
					else if parseDB(pal,n,t)
						then verify (pal,n+1,2)
						else []

fun run (w) = verify(w,0,0)

	
							     	 